name: Selenium Roadmap Extract
on:
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache Chrome packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Check for existing Chrome installation
        id: check-chrome
        run: |
          if command -v google-chrome >/dev/null 2>&1; then
            echo "Chrome is already installed: $(google-chrome --version)"
            echo "chrome_installed=true" >> $GITHUB_OUTPUT
          else
            echo "chrome_installed=false" >> $GITHUB_OUTPUT
          fi

      - name: Install Google Chrome
        if: steps.check-chrome.outputs.chrome_installed == 'false'
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends google-chrome-stable
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*
        env:
          DEBIAN_FRONTEND: noninteractive

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Add Google Sheets credentials
        run: |
          echo "${{ secrets.GOOGLE_CREDENTIALS }}" | base64 -d > credentials.json
          python -c "import json; with open('credentials.json', 'r') as f: json.load(f); print('Credentials JSON is valid')"
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Log credentials file for debugging
        if: failure()
        run: |
          echo "Contents of credentials.json (for debugging, first 1000 characters):"
          head -c 1000 credentials.json

      - name: Run Selenium script
        run: python roadmap_extract.py

      - name: Upload error screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: error-screenshots
          path: error_screenshot_*.png
          if-no-files-found: ignore

      - name: Upload text file
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: student-roadmap
          path: student_roadmap_log.txt
          if-no-files-found: ignore

      - name: Upload screenshot on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: error-screenshot
          path: error_screenshot_*.png
          if-no-files-found: ignore

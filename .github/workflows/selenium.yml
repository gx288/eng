name: Scrape Classes

on:
  schedule:
    - cron: '0 0 * * *'  # Hàng ngày lúc 00:00 UTC
  workflow_dispatch:

jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable jq xxd

      - name: Debug credentials
        run: |
          echo "${{ secrets.GOOGLE_CREDENTIALS }}" | jq . || echo "Invalid JSON in GOOGLE_CREDENTIALS"
          echo "${{ secrets.GOOGLE_CREDENTIALS }}" > temp_credentials.json
          echo "Content of temp_credentials.json:"
          cat temp_credentials.json
          echo "Hex dump of temp_credentials.json:"
          xxd -l 50 temp_credentials.json
          # Write credentials.json using Python to avoid echo issues
          python -c "import json; import os; content = os.environ['GOOGLE_CREDENTIALS'].encode('utf-8').decode('utf-8-sig').strip(); json.dump(json.loads(content), open('credentials.json', 'w', encoding='utf-8'), indent=2, ensure_ascii=False)"
          echo "Content of credentials.json:"
          cat credentials.json
          echo "Hex dump of credentials.json:"
          xxd -l 50 credentials.json

      - name: Debug Git
        run: |
          pwd
          git status

      - name: Run script
        env:
          CEC_USERNAME: ${{ secrets.CEC_USERNAME }}
          CEC_PASSWORD: ${{ secrets.CEC_PASSWORD }}
          PYTHONUNBUFFERED: 1
        run: python -u main.py

      - name: Commit and push changes
        if: always()
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add processed.json class_info_log.txt
          git commit -m "Update processed.json and logs" || echo "No changes to commit"
          git push || echo "Push failed, likely no changes or already up-to-date"

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: class_info_log.txt
